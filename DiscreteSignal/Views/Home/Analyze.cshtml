@{
    ViewData["Title"] = "Анализ аудио";
    var fileName = ViewData["FileName"]?.ToString();
}

<h1>Анализ аудио</h1>

<p>Файл: <strong>@fileName</strong></p>

<div>
    <label>Длина окна N:
        <input type="number" id="windowSize" value="1024" min="64" step="64"/>
    </label>
    <button id="btnAnalyze">Построить АЧХ</button>
</div>

<canvas id="spectrum" width="800" height="300"></canvas>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        (() => {
            const fileName = "@fileName";
            const btnAnalyze = document.getElementById('btnAnalyze');
            const windowSizeInput = document.getElementById('windowSize');
            const ctx = document.getElementById('spectrum').getContext('2d');
            let chart;

            async function drawAmplitudeResponse() {
                const windowSize = parseInt(windowSizeInput.value);

                const resp = await fetch(`/GetAmplitudeFrequencyResponse?fileName=${encodeURIComponent(fileName)}&windowSize=${windowSize}`);
                const data = await resp.json();

                if (!data.ok) {
                    alert('Ошибка: не удалось получить АЧХ');
                    return;
                }

                // частоты для оси X
                const sampleRate = 44100; // если хочешь, можешь возвращать из API
                const freqs = data.magnitudes.map((_, i) => (i * sampleRate / windowSize).toFixed(0));

                if (chart) chart.destroy();

                chart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: freqs,
                        datasets: [{
                            label: 'Амплитуда',
                            data: data.magnitudes,
                            fill: false,
                            borderColor: 'blue',
                            pointRadius: 0,
                            tension: 0.2
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            x: {
                                ticks: {
                                    callback: (val, idx) => idx % 32 === 0 ? freqs[idx] : ''
                                },
                                title: { display: true, text: 'Частота (Гц)' }
                            },
                            y: {
                                beginAtZero: true,
                                title: { display: true, text: 'Амплитуда (норм.)' }
                            }
                        }
                    }
                });
            }

            btnAnalyze.addEventListener('click', drawAmplitudeResponse);
        })();
    </script>
}